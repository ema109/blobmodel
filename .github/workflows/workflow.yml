name: Tests

on: [push, pull_request]

jobs:
  black:

    runs-on: ubuntu-latest
    if: always()

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
    - name: Check formatting with black
      run: |
        pip install black
        black --check .

  pytest:

    runs-on: ubuntu-latest
    if: always()
    strategy:
      matrix:
        python-version: [3.9]
        pip-packages:
          - "setuptools pip pytest pytest-cov coverage codecov mypy"
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade ${{ matrix.pip-packages }}
        pip install -e .
    - name: Test with pytest
      run: |
        pip install pytest
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage.xml
        name: codecov-umbrella
        path_to_write_report: ./codecov_report.txt
        verbose: true
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v1
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v1
    #   with:
    #     fail_ci_if_error: true

    - name: Type checking with mypy
      run: |
        pip install mypy
        mypy  --ignore-missing-imports .
